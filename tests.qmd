---
title: "Tests"
format: pdf
editor: source
execute: 
  echo: false
  warning: false
---

```{r}
library(lavaan)
library(cubature)
library(mvtnorm)
library(dplyr)
library(reshape2)
library(ggplot2)
source("datagen.R")
source("computeTrue.R")
source("comparisonMethods.R")
source("latentMethod.R")
source("se.R")
source(file.path("tests", "consistency.R"))
source(file.path("tests", "IV.R"))
source(file.path("tests", "skew.R"))
source(file.path("tests", "binary.R"))
source(file.path("tests", "noLatent.R"))
source(file.path("tests", "higherY.R"))
source(file.path("tests", "UZUAUY.R"))
source(file.path("tests", "zuRatio.R"))
```

```{r}
data.import <- function(tag, n) {
  A <- read.csv(
    file.path(
      "Data", "Samples",
      paste("A_", tag, "_", n, ".csv", sep = "")
    ),
    header = FALSE
  )
  Z <- read.csv(
    file.path(
      "Data", "Samples",
      paste("Z_", tag, "_", n, ".csv", sep = "")
    ),
    header = FALSE
  )
  Y <- read.csv(
    file.path(
      "Data", "Samples",
      paste("Y_", tag, "_", n, ".csv", sep = "")
    ),
    header = FALSE
  )
  df <- Z
  df$A <- A$V1
  df$Y <- Y$V1
  return(df)
}

bar.plots <- function(tag, plot.title, true.val, sample.size, trials){
  temp.df <- read.csv(
  file.path(
    "Data", "Estimates",
    paste("ests_", tag, as.character(sample.size),
          ".csv",
          sep = ""
    )
  ),
  colClasses = "numeric"
)
colnames(temp.df) <- c("Latent", "Linear", "IPW", "IV")
temp = melt(temp.df)
colnames(temp) <- c('Method', 'estimate')
ggplot(temp) + geom_boxplot(aes(y = estimate, x = Method)) +
  geom_hline(yintercept = true.val, color = 'green',
             linewidth = 2) + ylab("ATE Estimate") +
  ggtitle(plot.title)
ggsave(file.path("Data", "Figures", paste(tag, "_", sample.size, "_", trials, ".png",
                                          sep = ""
)))

temp.df2 <- temp.df[,c('Latent', 'Linear', 'IPW')]
temp = melt(temp.df2)
colnames(temp) <- c('Method', 'estimate')
ggplot(temp) + geom_boxplot(aes(y = estimate, x = Method)) +
  geom_hline(yintercept = true.val, color = 'green',
             linewidth = 2) + ylab("ATE Estimate") +
  ggtitle(plot.title)
ggsave(file.path("Data", "Figures", paste(tag, "_", sample.size, "_", trials, "_noIV.png",
                                          sep = ""
)))
}
```


```{r}
trials <- 100
sample.size <- 500
```

## Consistency
```{r}
set.seed(127)
tag <- "consistency"
k = 2
p = 9
sample.sizes <- seq(from = 100, to = 1000, by = 100)

test.consistency(tag, sample.sizes, 1:3, reps = trials)
graph.consistency(tag, seq(from = 200, to = 1000, by = 200))
```

## UZ vs UA vs UY
```{r}
set.seed(127)
tag = ""
p=9
uzuauy_test(1:5, sample.size, trials, tag)
load(file.path("Data", "Parameters",
                 paste("param_zhigh_ahigh_y40", ".RData", sep = "")))
true_ate <- gamma[1]
graph.uzuauy(tag, sample.size)
```

## IV
```{r}
set.seed(127)
tag = "IV"
k = 2
p = 9

iv_test(1:9, sample.size, trials, tag)
load(file.path("Data", "Parameters",
                 paste("param_", tag, ".RData", sep = "")))
true_ate <- gamma[1]
bar.plots(tag, "True Model: Instrument Variable", true_ate, sample.size, trials)
```


## Skew Normal
```{r}
set.seed(127)
tag = "skew"
k = 2
p = 9

skew_test(1:9, sample.size, trials, tag)

for (skew.level in c(5)){
  skew_test(1:9, sample.size, 100, paste(tag, skew.level + 10, sep = ""))
  bar.plots(paste(tag, skew.level + 10, sep = ""),
            "True Model: Skew Normal", true_ate, sample.size, trials
            )
}

load(file.path("Data", "Parameters",
                 paste("param_", paste(tag, skew.level + 10, sep = ""), sample.size, ".RData", sep = "")))
true_ate <- gamma[1]
bar.plots(tag, "True Model: Skew Normal", true_ate, sample.size, trials)
```

## Binary A
```{r}
set.seed(127)
tag <- 'binary'
k = 2
p = 6

binary_test(1:p, sample.size, trials, tag)
load(file.path("Data", "Parameters",
                 paste("param_", tag, ".RData", sep = "")))
true_ate <- gamma[1]
bar.plots(tag, "True Model: Probit A", true_ate, sample.size, trials)
```

## No Latent Variable
```{r}
set.seed(127)
tag <- 'no_latent'
p = 6

no_latent_test(1:p, sample.size, trials, tag)
load(file.path("Data", "Parameters",
                 paste("param_", tag, ".RData", sep = "")))
true_ate <- gamma[1]
bar.plots(tag, "True Model: No Latent Variable", true_ate, sample.size, trials)
```

## Different ratios of Z to U
```{r}
set.seed(127)
tag <- 'ratio'
k <- 2
pvals <- c(2, 4, 6, 8, 10, 12, 14, 16)

ratio_test(1:max(pvals), pvals, sample.size, trials, tag)
load(file.path("Data", "Parameters",
                 paste("param_", tag, pvals[1], ".RData", sep = "")))
true_ate <- gamma[1]
graph.ratio(tag, pvals)
```

## Higher Order Y
```{r}
set.seed(127)
tag <- 'squared'
k = 1
p = 6

squared_test(1:p, sample.size, trials, tag)
load(file.path("Data", "Parameters",
                 paste("param_", tag, ".RData", sep = "")))
true_ate <- gamma[1] + gamma[3]
bar.plots(tag, "True Model: Higher Order Dependence on U", true_ate, sample.size, trials)
```