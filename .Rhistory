file.path(
"Data", "Estimates",
paste("ests_", tag, as.character(sample.size),
".csv",
sep = ""
)
),
colClasses = "numeric"
)
colnames(temp.df) <- c("Latent", "Linear", "IPW", "IV", "Proximal")
temp = melt(temp.df)
colnames(temp) <- c('Method', 'estimate')
p1 <- ggplot(temp) +
geom_hline(yintercept = true.val, color = 'green',
linewidth = 1) + ylab("ATE Estimate") +
geom_boxplot(aes(y = estimate, x = Method), outliers = FALSE) +
ggtitle(plot.title) +
coord_cartesian(ylim = c(-.5, 1.5)) +
theme(axis.text.x = element_text(angle = 30, hjust = 1, vjust = 1))
ggsave(file.path("Data", "Figures", paste(tag, "_", sample.size, "_", trials, ".png",
sep = ""
)), plot = p1)
temp.df2 <- temp.df[,c('Latent', 'Linear', 'IPW', 'Proximal')]
temp = melt(temp.df2)
colnames(temp) <- c('Method', 'estimate')
p2 <- ggplot(temp) +
geom_hline(yintercept = true.val, color = 'green',
linewidth = 1) + ylab("ATE Estimate") +
geom_boxplot(aes(y = estimate, x = Method), outliers = FALSE) +
ggtitle(plot.title) +
coord_cartesian(ylim = c(-.5, 1.5)) +
theme(axis.text.x = element_text(angle = 30, hjust = 1, vjust = 1))
ggsave(file.path("Data", "Figures", paste(tag, "_", sample.size, "_", trials, "_noIV.png",
sep = ""
)), p2)
return(list(p1, p2))
}
trials <- 1000
sample.size <- 1000
set.seed(127)
tag <- "consistency"
k = 3
p = 12
sample.sizes <- seq(from = 9000, to = 10000, by = 500)
# test.consistency(tag, p, sample.sizes, 1:4, reps = trials)
consistency.plots <- graph.consistency(tag, p, seq(from = 1000, to = 10000, by = 500))
set.seed(127)
tag = "iv2"
k = 2
p = 6
# iv_test(1:9, p, sample.size, trials, tag)
load(file.path("Data", "Parameters", paste("param_", tag, ".RData", sep = "")))
true_ate <- gamma[1]
iv.plots <- bar.plots(tag, "Instrument Variable", true_ate, sample.size, trials)
set.seed(127)
tag = "skew"
k = 1
p = 5
# skew_test(1:p, p, sample.size, trials, tag)
load(file.path("Data", "Parameters",
paste("param_", tag, sample.size, ".RData", sep = "")))
true_ate <- gamma[1]
skew.plots <- bar.plots(tag, "Skew Normal", true_ate, sample.size, trials)
set.seed(127)
tag <- 'binary'
k = 3
p = 10
# binary_test(1:p, p, sample.size, trials, tag)
load(file.path("Data", "Parameters",
paste("param_", tag, ".RData", sep = "")))
true_ate <- gamma[1]
binary.plots <- bar.plots(tag, "Probit A", true_ate, sample.size, trials)
set.seed(127)
tag <- 'noLatent'
p = 6
# no_latent_test(1:p, p, sample.size, trials, tag)
load(file.path("Data", "Parameters",
paste("param_", tag, ".RData", sep = "")))
true_ate <- gamma[1]
nolatent.plots <- bar.plots(tag, "No Latent Variable", true_ate, sample.size, trials)
set.seed(127)
tag <- 'ratio'
k <- 2
pvals <- c(2, 4, 6, 8, 10, 12, 14, 16, 18, 20)
# ratio_test(1:max(pvals), pvals, sample.size, trials, tag)
load(file.path("Data", "Parameters",
paste("param_", tag, pvals[1], ".RData", sep = "")))
true_ate <- gamma[1]
ratio.plots <- graph.ratio(tag, pvals)
set.seed(127)
tag <- 'squared'
k = 1
p = 6
# squared_test(1:p, p, sample.size, trials, tag)
load(file.path("Data", "Parameters",
paste("param_", tag, ".RData", sep = "")))
true_ate <- gamma[1] + gamma[3]
square.plots <- bar.plots(tag, "Higher Order\nMoments", true_ate, sample.size, trials)
design <- "
111222333
444555555
666777788
"
temp1 <- nolatent.plots[[1]] + binary.plots[[1]] + iv.plots[[1]] + square.plots[[1]] + consistency.plots[[1]] + skew.plots[[1]] + ratio.plots[[1]] + guide_area() +
plot_layout(design = design, guides = 'collect') +
plot_annotation(tag_levels = "I") & theme(plot.tag.position = c(0,1))
ggsave(file.path('Data', 'Figures', 'plotpanel.png'), plot = temp1,
width = 8, height = 8, units = "in", dpi = 1200)
temp2 <- nolatent.plots[[2]] + binary.plots[[2]] + iv.plots[[2]] + square.plots[[2]] + consistency.plots[[2]] + skew.plots[[2]] + ratio.plots[[2]] + guide_area() +
plot_layout(design = design, guides = 'collect') +
plot_annotation(tag_levels = "I") & theme(plot.tag.position = c(0,1))
ggsave(file.path('Data', 'Figures', 'plotpanel_noIV.png'), plot = temp2,
width = 8, height = 8, units = "in", dpi = 1200)
library(lavaan)
library(cubature)
library(mvtnorm)
library(dplyr)
library(reshape2)
library(ggplot2)
library(patchwork)
source("datagen.R")
source("computeTrue.R")
source("comparisonMethods.R")
source("latentMethod.R")
source("se.R")
source(file.path("tests", "consistency.R"))
source(file.path("tests", "IV.R"))
source(file.path("tests", "skew.R"))
source(file.path("tests", "binary.R"))
source(file.path("tests", "noLatent.R"))
source(file.path("tests", "higherY.R"))
source(file.path("tests", "UZUAUY.R"))
source(file.path("tests", "zuRatio.R"))
data.import <- function(tag, n) {
A <- read.csv(
file.path(
"Data", "Samples",
paste("A_", tag, "_", n, ".csv", sep = "")
),
header = FALSE
)
Z <- read.csv(
file.path(
"Data", "Samples",
paste("Z_", tag, "_", n, ".csv", sep = "")
),
header = FALSE
)
Y <- read.csv(
file.path(
"Data", "Samples",
paste("Y_", tag, "_", n, ".csv", sep = "")
),
header = FALSE
)
df <- Z
df$A <- A$V1
df$Y <- Y$V1
return(df)
}
bar.plots <- function(tag, plot.title, true.val, sample.size, trials){
temp.df <- read.csv(
file.path(
"Data", "Estimates",
paste("ests_", tag, as.character(sample.size),
".csv",
sep = ""
)
),
colClasses = "numeric"
)
colnames(temp.df) <- c("Latent", "Linear", "IPW", "IV", "Proximal")
temp = melt(temp.df)
colnames(temp) <- c('Method', 'estimate')
p1 <- ggplot(temp) +
geom_hline(yintercept = true.val, color = 'green',
linewidth = 1) + ylab("ATE Estimate") +
geom_boxplot(aes(y = estimate, x = Method), outliers = FALSE) +
ggtitle(plot.title) +
coord_cartesian(ylim = c(-.5, 1.5)) +
theme(axis.text.x = element_text(angle = 30, hjust = 1, vjust = 1))
ggsave(file.path("Data", "Figures", paste(tag, "_", sample.size, "_", trials, ".png",
sep = ""
)), plot = p1)
temp.df2 <- temp.df[,c('Latent', 'Linear', 'IPW', 'Proximal')]
temp = melt(temp.df2)
colnames(temp) <- c('Method', 'estimate')
p2 <- ggplot(temp) +
geom_hline(yintercept = true.val, color = 'green',
linewidth = 1) + ylab("ATE Estimate") +
geom_boxplot(aes(y = estimate, x = Method), outliers = FALSE) +
ggtitle(plot.title) +
coord_cartesian(ylim = c(-.5, 1.5)) +
theme(axis.text.x = element_text(angle = 30, hjust = 1, vjust = 1))
ggsave(file.path("Data", "Figures", paste(tag, "_", sample.size, "_", trials, "_noIV.png",
sep = ""
)), p2)
return(list(p1, p2))
}
trials <- 1000
sample.size <- 1000
set.seed(127)
tag = "iv2"
k = 2
p = 6
# iv_test(1:9, p, sample.size, trials, tag)
load(file.path("Data", "Parameters", paste("param_", tag, ".RData", sep = "")))
true_ate <- gamma[1]
iv.plots <- bar.plots(tag, "Instrument Variable", true_ate, sample.size, trials)
set.seed(127)
tag = "iv2"
k = 2
p = 6
iv_test(1:9, p, sample.size, trials, tag)
library(lavaan)
library(cubature)
library(mvtnorm)
library(dplyr)
library(reshape2)
library(ggplot2)
library(patchwork)
source("datagen.R")
source("computeTrue.R")
source("comparisonMethods.R")
source("latentMethod.R")
source("se.R")
source(file.path("tests", "consistency.R"))
source(file.path("tests", "IV.R"))
source(file.path("tests", "skew.R"))
source(file.path("tests", "binary.R"))
source(file.path("tests", "noLatent.R"))
source(file.path("tests", "higherY.R"))
source(file.path("tests", "UZUAUY.R"))
source(file.path("tests", "zuRatio.R"))
data.import <- function(tag, n) {
A <- read.csv(
file.path(
"Data", "Samples",
paste("A_", tag, "_", n, ".csv", sep = "")
),
header = FALSE
)
Z <- read.csv(
file.path(
"Data", "Samples",
paste("Z_", tag, "_", n, ".csv", sep = "")
),
header = FALSE
)
Y <- read.csv(
file.path(
"Data", "Samples",
paste("Y_", tag, "_", n, ".csv", sep = "")
),
header = FALSE
)
df <- Z
df$A <- A$V1
df$Y <- Y$V1
return(df)
}
bar.plots <- function(tag, plot.title, true.val, sample.size, trials){
temp.df <- read.csv(
file.path(
"Data", "Estimates",
paste("ests_", tag, as.character(sample.size),
".csv",
sep = ""
)
),
colClasses = "numeric"
)
colnames(temp.df) <- c("Latent", "Linear", "IPW", "IV", "Proximal")
temp = melt(temp.df)
colnames(temp) <- c('Method', 'estimate')
p1 <- ggplot(temp) +
geom_hline(yintercept = true.val, color = 'green',
linewidth = 1) + ylab("ATE Estimate") +
geom_boxplot(aes(y = estimate, x = Method), outliers = FALSE) +
ggtitle(plot.title) +
coord_cartesian(ylim = c(-.5, 1.5)) +
theme(axis.text.x = element_text(angle = 30, hjust = 1, vjust = 1))
ggsave(file.path("Data", "Figures", paste(tag, "_", sample.size, "_", trials, ".png",
sep = ""
)), plot = p1)
temp.df2 <- temp.df[,c('Latent', 'Linear', 'IPW', 'Proximal')]
temp = melt(temp.df2)
colnames(temp) <- c('Method', 'estimate')
p2 <- ggplot(temp) +
geom_hline(yintercept = true.val, color = 'green',
linewidth = 1) + ylab("ATE Estimate") +
geom_boxplot(aes(y = estimate, x = Method), outliers = FALSE) +
ggtitle(plot.title) +
coord_cartesian(ylim = c(-.5, 1.5)) +
theme(axis.text.x = element_text(angle = 30, hjust = 1, vjust = 1))
ggsave(file.path("Data", "Figures", paste(tag, "_", sample.size, "_", trials, "_noIV.png",
sep = ""
)), p2)
return(list(p1, p2))
}
trials <- 1000
sample.size <- 1000
set.seed(127)
tag <- "consistency"
k = 3
p = 12
sample.sizes <- seq(from = 9000, to = 10000, by = 500)
# test.consistency(tag, p, sample.sizes, 1:4, reps = trials)
consistency.plots <- graph.consistency(tag, p, seq(from = 1000, to = 10000, by = 500))
set.seed(127)
tag = "iv2"
k = 2
p = 6
# iv_test(1:9, p, sample.size, trials, tag)
load(file.path("Data", "Parameters", paste("param_", tag, ".RData", sep = "")))
true_ate <- gamma[1]
iv.plots <- bar.plots(tag, "Instrument Variable", true_ate, sample.size, trials)
set.seed(127)
tag = "skew"
k = 1
p = 5
# skew_test(1:p, p, sample.size, trials, tag)
load(file.path("Data", "Parameters",
paste("param_", tag, sample.size, ".RData", sep = "")))
true_ate <- gamma[1]
skew.plots <- bar.plots(tag, "Skew Normal", true_ate, sample.size, trials)
set.seed(127)
tag <- 'binary'
k = 3
p = 10
# binary_test(1:p, p, sample.size, trials, tag)
load(file.path("Data", "Parameters",
paste("param_", tag, ".RData", sep = "")))
true_ate <- gamma[1]
binary.plots <- bar.plots(tag, "Probit A", true_ate, sample.size, trials)
set.seed(127)
tag <- 'noLatent'
p = 6
# no_latent_test(1:p, p, sample.size, trials, tag)
load(file.path("Data", "Parameters",
paste("param_", tag, ".RData", sep = "")))
true_ate <- gamma[1]
nolatent.plots <- bar.plots(tag, "No Latent Variable", true_ate, sample.size, trials)
set.seed(127)
tag <- 'ratio'
k <- 2
pvals <- c(2, 4, 6, 8, 10, 12, 14, 16, 18, 20)
# ratio_test(1:max(pvals), pvals, sample.size, trials, tag)
load(file.path("Data", "Parameters",
paste("param_", tag, pvals[1], ".RData", sep = "")))
true_ate <- gamma[1]
ratio.plots <- graph.ratio(tag, pvals)
set.seed(127)
tag <- 'squared'
k = 1
p = 6
# squared_test(1:p, p, sample.size, trials, tag)
load(file.path("Data", "Parameters",
paste("param_", tag, ".RData", sep = "")))
true_ate <- gamma[1] + gamma[3]
square.plots <- bar.plots(tag, "Higher Order\nMoments", true_ate, sample.size, trials)
temp1 <- consistency.plots[[1]] + square.plots[[1]] +
ratio.plots[[1]] + guide_area() + skew.plots[[1]] +
+ binary.plots[[1]] + nolatent.plots[[1]] + iv.plots[[1]] +
plot_layout(design = design, guides = 'collect') +
plot_annotation(tag_levels = "I") & theme(plot.tag.position = c(0,1))
temp1 <- consistency.plots[[1]] + square.plots[[1]] +
ratio.plots[[1]] + guide_area() + skew.plots[[1]] +
binary.plots[[1]] + nolatent.plots[[1]] + iv.plots[[1]] +
plot_layout(design = design, guides = 'collect') +
plot_annotation(tag_levels = "I") & theme(plot.tag.position = c(0,1))
design <- "
111111222
333344555
666777888
"
temp1 <- consistency.plots[[1]] + square.plots[[1]] +
ratio.plots[[1]] + guide_area() + skew.plots[[1]] +
binary.plots[[1]] + nolatent.plots[[1]] + iv.plots[[1]] +
plot_layout(design = design, guides = 'collect') +
plot_annotation(tag_levels = "I") & theme(plot.tag.position = c(0,1))
ggsave(file.path('Data', 'Figures', 'plotpanel.png'), plot = temp1,
width = 8, height = 8, units = "in", dpi = 1200)
temp2 <- consistency.plots[[2]] + square.plots[[2]] +
ratio.plots[[2]] + guide_area() + skew.plots[[2]] +
binary.plots[[2]] + nolatent.plots[[2]] + iv.plots[[2]] +
plot_layout(design = design, guides = 'collect') +
plot_annotation(tag_levels = "I") & theme(plot.tag.position = c(0,1)))
temp2 <- consistency.plots[[2]] + square.plots[[2]] +
ratio.plots[[2]] + guide_area() + skew.plots[[2]] +
binary.plots[[2]] + nolatent.plots[[2]] + iv.plots[[2]] +
plot_layout(design = design, guides = 'collect') +
plot_annotation(tag_levels = "I") & theme(plot.tag.position = c(0,1))
ggsave(file.path('Data', 'Figures', 'plotpanel_noIV.png'), plot = temp2,
width = 8, height = 8, units = "in", dpi = 1200)
graph.ratio <- function(tag, pvals) {
mean.ests <- data.frame(matrix(nrow = 0, ncol = 5))
j <- 0
for (p in pvals) {
j <- j + 1
temp.df <- read.csv(
file.path(
"Data", "Estimates",
paste("ests_", tag, p, sample.size,
".csv",
sep = ""
)
),
colClasses = "numeric"
)
mean.ests[5 * j - 4, ] <- c(
p/k, "linear", median(temp.df$linear, na.rm = TRUE),
quantile(temp.df$linear, probs = c(.25, .75), na.rm = TRUE)
)
mean.ests[5 * j - 3, ] <- c(
p/k, "IPW", median(temp.df$ipw, na.rm = TRUE),
quantile(temp.df$ipw, probs = c(.25, .75), na.rm = TRUE)
)
mean.ests[5 * j, ] <- c(
p/k, "latent", median(temp.df$latent, na.rm = TRUE),
quantile(temp.df$latent, probs = c(.25, .75), na.rm = TRUE)
)
mean.ests[5 * j - 1, ] <- c(
p/k, "IV", median(temp.df$iv, na.rm = TRUE),
quantile(temp.df$iv, probs = c(.25, .75), na.rm = TRUE)
)
mean.ests[5 * j - 2, ] <- c(
p/k, "proximal", median(temp.df$proximal, na.rm = TRUE),
quantile(temp.df$proximal, probs = c(.25, .75), na.rm = TRUE)
)
}
colnames(mean.ests) <- c("pk", "Method", "Mean", "Q.25", "Q.75")
mean.ests$Method <- factor(mean.ests$Method)
mean.ests$pk <- as.numeric(mean.ests$pk)
mean.ests$Mean <- as.numeric(mean.ests$Mean)
mean.ests$Q.25 <- as.numeric(mean.ests$Q.25)
mean.ests$Q.75 <- as.numeric(mean.ests$Q.75)
mean.ests <- mean.ests[order(mean.ests$pk), ]
load(file.path(
"Data", "Parameters",
paste("param_", tag, p, ".RData", sep = "")
))
true_ate <- gamma[1]
p1 <- ggplot(mean.ests) +
geom_hline(yintercept = true_ate) +
geom_ribbon(aes(
x = pk, ymin = Q.25, ymax = Q.75, fill = Method),
alpha = .3
) +
geom_line(aes(x = pk, y = Mean, group = Method, color = Method),
linewidth = 2
) +
geom_point(aes(x = pk, y = Mean, color = Method), size = 3) +
xlab("p/k") +
ylab("ATE Estimate") + guides(alpha = "none") +
ggtitle("Ratio of p to k") +
theme(legend.position = c(.87, .5)) +
coord_cartesian(ylim = c(-.5, 1.5)) +
scale_x_continuous(breaks = 1:10)
ggsave(file.path("Data", "Figures", paste(tag, ".png",
sep = ""
)), p1)
mean.ests <- mean.ests[mean.ests$Method != 'IV', ]
p2 <- ggplot(mean.ests) +
geom_hline(yintercept = true_ate) +
geom_ribbon(aes(
x = pk, ymin = Q.25, ymax = Q.75, fill = Method),
alpha = .3
) +
geom_line(aes(x = pk, y = Mean, group = Method, color = Method),
linewidth = 2
) +
geom_point(aes(x = pk, y = Mean, color = Method), size = 3) +
xlab("p/k") +
ylab("ATE Estimate") + guides(alpha = "none") +
ggtitle("Ratio of p to k") +
theme(legend.position = c(.87, .5)) +
coord_cartesian(ylim = c(-.5, 1.5)) +
scale_x_continuous(breaks = 1:10)
ggsave(file.path("Data", "Figures", paste(tag, "_noIV.png",
sep = ""
)), p2)
return(list(p1,p2))
}
set.seed(127)
tag <- 'ratio'
k <- 2
pvals <- c(2, 4, 6, 8, 10, 12, 14, 16, 18, 20)
# ratio_test(1:max(pvals), pvals, sample.size, trials, tag)
load(file.path("Data", "Parameters",
paste("param_", tag, pvals[1], ".RData", sep = "")))
true_ate <- gamma[1]
ratio.plots <- graph.ratio(tag, pvals)
design <- "
111111222
333344555
666777888
"
temp1 <- consistency.plots[[1]] + square.plots[[1]] +
ratio.plots[[1]] + guide_area() + skew.plots[[1]] +
binary.plots[[1]] + nolatent.plots[[1]] + iv.plots[[1]] +
plot_layout(design = design, guides = 'collect') +
plot_annotation(tag_levels = "I") & theme(plot.tag.position = c(0,1))
ggsave(file.path('Data', 'Figures', 'plotpanel.png'), plot = temp1,
width = 8, height = 8, units = "in", dpi = 1200)
temp2 <- consistency.plots[[2]] + square.plots[[2]] +
ratio.plots[[2]] + guide_area() + skew.plots[[2]] +
binary.plots[[2]] + nolatent.plots[[2]] + iv.plots[[2]] +
plot_layout(design = design, guides = 'collect') +
plot_annotation(tag_levels = "I") & theme(plot.tag.position = c(0,1))
ggsave(file.path('Data', 'Figures', 'plotpanel_noIV.png'), plot = temp2,
width = 8, height = 8, units = "in", dpi = 1200)
